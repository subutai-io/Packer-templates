# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'fileutils'

unless Vagrant.has_plugin?('vagrant-subutai')
  raise 'Vagrant Subutai Plugin required: vagrant plugin install vagrant-subutai'
end

require 'vagrant-subutai'

SubutaiConfig.bridged!
# SubutaiConfig.logging!(:debug)

SubutaiConfig.load_config(ARGV[0], :virtualbox)
SubutaiConfig.print

Vagrant.require_version '>= 2.0.1'

Vagrant.configure('2') do |config|
  config.vm.box = 'subutai/xenial'
  url = SubutaiConfig.url_of_cdn
  owner = '43d722f2c81bcd5159de5e5a482613b046c548b6'
  artifact_name = 'vagrant-subutai-xenial-virtualbox.box'
  config.vm.box_url = url + '/raw/download?id=' + SubutaiConfig.get_latest_id_artifact(owner,artifact_name)
  config.ssh.username = 'subutai'

  # Need to override packer's base_mac setting
  config.vm.base_mac = SubutaiConfig.get(:_BASE_MAC)

  # Second Bridged Interface enp???
  if SubutaiConfig.get(:BRIDGE).nil?
    config.vm.network 'public_network', :type => 'dhcp', :adapter => 2, nic_type: 'virtio'
  else
    config.vm.network 'public_network', :type => 'dhcp', :adapter => 2, nic_type: 'virtio',
                      :bridge => SubutaiConfig.get(:BRIDGE)
  end

  if SubutaiConfig.get(:SUBUTAI_PEER)
    config.vm.network 'forwarded_port', guest: 8443, host: SubutaiConfig.get(:_CONSOLE_PORT), auto_correct: true
  end

  # Third Host-Only Interface enp???
  config.vm.network 'private_network', :type => 'dhcp', :adapter => 3, nic_type: 'virtio'

  config.vm.provider 'virtualbox' do |vb|
    vb.memory = SubutaiConfig.get(:SUBUTAI_RAM)
    vb.cpus = SubutaiConfig.get(:SUBUTAI_CPU)

    # To avoid the Sierra bug let's turn off things we do not need
    # See here: https://github.com/monetate/ectou-export/issues/5
    vb.customize ['modifyvm', :id, '--audio', 'none']
    vb.customize ['modifyvm', :id, '--uart1', 'off']
    vb.customize ['modifyvm', :id, '--uart2', 'off']
    vb.customize ['modifyvm', :id, '--uart3', 'off']
    vb.customize ['modifyvm', :id, '--uart4', 'off']
    vb.customize ["setextradata", :id, "VBoxInternal/Devices/ahci/0/LUN#0/Config/IgnoreFlush", "0"]

    # only for dev and master
    vb.linked_clone = true

    unless Vagrant.has_plugin?("vagrant-vbguest")
      raise 'VBGuest plugin required: vagrant plugin install vagrant-vbguest!'
    end

    if ARGV[0] == 'up' || ARGV[0] == 'reload'
      has_grow, grow_by = SubutaiDisk.has_grow
      file_disk = SubutaiDisk.file(grow_by)

      unless File.exist? (file_disk)
        if has_grow
          STDOUT.puts  "\e[33mDisk size is growing by #{grow_by} gb.\e[0m"

          vb.customize ['createhd', '--filename', file_disk, '--size', SubutaiDisk.size(grow_by)]
          vb.customize ['storageattach', :id,  '--storagectl', 'SATA Controller', '--port', SubutaiDisk.port, '--device', 0, '--type', 'hdd', '--medium', file_disk]
          vb.customize ["setextradata", :id, "VBoxInternal/Devices/ahci/0/LUN#1/Config/IgnoreFlush", "0"]
          SubutaiDisk.save_conf(grow_by)
        end
      end
    end
  end

  config.vm.provision 'shell', env: SubutaiConfig.config, inline: <<-SHELL
    echo "SUBUTAI_VAGRANT_VERSION=$VERSION"   >> /etc/environment
    echo "SUBUTAI_BRIDGE_IFACE=enp0s8"        >> /etc/environment
    echo "SUBUTAI_NAT_IFACE=enp0s3"           >> /etc/environment
    echo "SUBUTAI_HOST_IFACE=enp0s9"          >> /etc/environment

    if [ -n "$PASSWORD_OVERRIDE" ]; then
      usermod --password $(echo "$PASSWORD_OVERRIDE" | openssl passwd -1 -stdin) subutai
    fi
  SHELL

  unless SubutaiConfig.get(:AUTHORIZED_KEYS).nil?
    config.vm.provision 'file', source: SubutaiConfig.get(:AUTHORIZED_KEYS), destination: '/tmp/authorized_keys'

    config.vm.provision 'shell', inline: <<-SHELL
      mkdir -p /root/.ssh
      cat /tmp/authorized_keys >> /root/.ssh/authorized_keys
      chmod 600 /root/.ssh/authorized_keys
      chmod 700 /root/.ssh

      mkdir -p /home/subutai/.ssh
      cat /tmp/authorized_keys >> /home/subutai/.ssh/authorized_keys
      chown subutai:subutai /home/subutai/.ssh/authorized_keys
      chmod 600 /home/subutai/.ssh/authorized_keys
      chmod 700 /home/subutai/.ssh
      chown subutai:subutai /home/subutai/.ssh
    SHELL
  end

  if SubutaiConfig.provision_snap?
    config.vm.provision 'file', source: SubutaiConfig.get(:_ALT_SNAP), destination: '$HOME/subutai.snap'
    SubutaiConfig.snap_provisioned!
  end

  if SubutaiConfig.provision_management?
    config.vm.provision 'file', source: SubutaiConfig.get(:_ALT_MANAGEMENT), destination: '$HOME/subutai.management'
    SubutaiConfig.management_provisioned!
  end

  config.vm.provision 'shell', env: SubutaiConfig.config,
                      path: 'https://raw.githubusercontent.com/subutai-io/packer/master/provisioning/en/provisioner.sh'

  if ARGV[0] == 'up' || ARGV[0] == 'reload'
    has_grow, grow_by = SubutaiDisk.has_grow

    if has_grow
      config.vm.provision "shell", run: "always", env: {DISK_SIZE: grow_by.to_i},
                          path: 'https://raw.githubusercontent.com/subutai-io/packer/master/provisioning/en/subutai_disk.sh'
    end
  end

  config.vm.provision :blueprint
end
