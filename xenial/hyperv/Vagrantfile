# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'fileutils'

unless Vagrant.has_plugin?('vagrant-subutai')
  raise 'Vagrant Subutai Plugin required: vagrant plugin install vagrant-subutai'
end

require 'vagrant-subutai'

SubutaiConfig.bridged!
# SubutaiConfig.logging!(:debug)

SubutaiConfig.load_config(ARGV[0], :hyperv)
SubutaiConfig.print

Vagrant.require_version '>= 2.0.1'

Vagrant.configure('2') do |config|
  config.vm.box = 'subutai/xenial'
  url = SubutaiConfig.url_of_cdn
  owner = '43d722f2c81bcd5159de5e5a482613b046c548b6'
  artifact_name = 'vagrant-subutai-xenial-hyperv.box'
  config.vm.box_url = url + '/raw/download?id=' + SubutaiConfig.get_latest_id_artifact(owner,artifact_name)
  config.ssh.username = 'subutai'

  config.vm.synced_folder ".", "/vagrant", disabled: false, type: 'rsync'

  config.vm.provider "hyperv" do |h|
    h.enable_virtualization_extensions = true
    h.differencing_disk = true
    h.maxmemory = SubutaiConfig.get(:SUBUTAI_RAM)
    h.memory = SubutaiConfig.get(:SUBUTAI_RAM)
    h.cpus = SubutaiConfig.get(:SUBUTAI_CPU)
  end

  if SubutaiConfig.boolean?(:SUBUTAI_PEER)
    config.vm.network 'forwarded_port', guest: 8443, host: SubutaiConfig.get(:_CONSOLE_PORT), auto_correct: true
  end

  config.vm.provision 'shell', env: SubutaiConfig.config, inline: <<-SHELL
    echo "SUBUTAI_VAGRANT_VERSION=$VERSION"   >> /etc/environment
    echo "SUBUTAI_BRIDGE_IFACE=enp0s8"        >> /etc/environment
    echo "SUBUTAI_NAT_IFACE=enp0s3"           >> /etc/environment
    echo "SUBUTAI_HOST_IFACE=enp0s9"          >> /etc/environment

    if [ -n "$PASSWORD_OVERRIDE" ]; then
      usermod --password $(echo "$PASSWORD_OVERRIDE" | openssl passwd -1 -stdin) subutai
    fi
  SHELL

  unless SubutaiConfig.get(:AUTHORIZED_KEYS).nil?
    config.vm.provision 'file', source: SubutaiConfig.get(:AUTHORIZED_KEYS), destination: '/tmp/authorized_keys'

    config.vm.provision 'shell', inline: <<-SHELL
      mkdir -p /root/.ssh
      cat /tmp/authorized_keys >> /root/.ssh/authorized_keys
      chmod 600 /root/.ssh/authorized_keys
      chmod 700 /root/.ssh

      mkdir -p /home/subutai/.ssh
      cat /tmp/authorized_keys >> /home/subutai/.ssh/authorized_keys
      chown subutai:subutai /home/subutai/.ssh/authorized_keys
      chmod 600 /home/subutai/.ssh/authorized_keys
      chmod 700 /home/subutai/.ssh
      chown subutai:subutai /home/subutai/.ssh
    SHELL
  end

  if SubutaiConfig.provision_snap?
    config.vm.provision 'file', source: SubutaiConfig.get(:_ALT_SNAP), destination: '$HOME/subutai.snap'
    SubutaiConfig.snap_provisioned!
  end

  if SubutaiConfig.provision_management?
    config.vm.provision 'file', source: SubutaiConfig.get(:_ALT_MANAGEMENT), destination: '$HOME/subutai.management'
    SubutaiConfig.management_provisioned!
  end

  config.vm.provision 'shell', env: SubutaiConfig.config,
                      path: 'https://raw.githubusercontent.com/subutai-io/packer/master/provisioning/en/provisioner.sh'

  config.vm.provision :blueprint
end
