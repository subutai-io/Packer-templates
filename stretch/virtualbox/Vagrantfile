# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'fileutils'

unless Vagrant.has_plugin?('subutai_cli')
  raise 'SubutaiCli plugin required: vagrant plugin install subutai_cli'
end

require 'subutai_cli'

SubutaiConfig.bridged!
# SubutaiConfig.logging!(:debug)

SubutaiConfig.load_config(ARGV[0], :virtualbox)
SubutaiConfig.print

$GROW_BY = SubutaiConfig.get_grow_by

Vagrant.require_version '>= 2.0.1'

Vagrant.configure('2') do |config|
  config.vm.box = 'subutai/stretch'
  url = SubutaiConfig.url_of_cdn
  owner = '43d722f2c81bcd5159de5e5a482613b046c548b6'
  artifact_name = 'vagrant-subutai-stretch-virtualbox.box'
  config.vm.box_url = url + '/raw/download?id=' + SubutaiConfig.get_latest_id_artifact(owner,artifact_name)
  config.ssh.username = 'subutai'

  # Need to override packer's base_mac setting
  config.vm.base_mac = SubutaiConfig.get(:_BASE_MAC)

  # Second Bridged Interface enp???
  if SubutaiConfig.get(:BRIDGE).nil?
    config.vm.network 'public_network', :type => 'dhcp', :adapter => 2, nic_type: 'virtio'
  else
    config.vm.network 'public_network', :type => 'dhcp', :adapter => 2, nic_type: 'virtio',
                      :bridge => SubutaiConfig.get(:BRIDGE)
  end

  if SubutaiConfig.get(:SUBUTAI_PEER)
    config.vm.network 'forwarded_port', guest: 8443, host: SubutaiConfig.get(:_CONSOLE_PORT)
  end

  # Third Host-Only Interface enp???
  config.vm.network 'private_network', :type => 'dhcp', :adapter => 3, nic_type: 'virtio'

  config.vm.provider 'virtualbox' do |vb|
    vb.memory = SubutaiConfig.get(:SUBUTAI_RAM)
    vb.cpus = SubutaiConfig.get(:SUBUTAI_CPU)

    # To avoid the Sierra bug let's turn off things we do not need
    # See here: https://github.com/monetate/ectou-export/issues/5
    vb.customize ['modifyvm', :id, '--audio', 'none']
    vb.customize ['modifyvm', :id, '--uart1', 'off']
    vb.customize ['modifyvm', :id, '--uart2', 'off']
    vb.customize ['modifyvm', :id, '--uart3', 'off']
    vb.customize ['modifyvm', :id, '--uart4', 'off']

    # only for dev and master
    vb.linked_clone = true

    unless Vagrant.has_plugin?("vagrant-vbguest")
      raise 'VBGuest plugin required: vagrant plugin install vagrant-vbguest!'
    end

    if ARGV[0] == 'up'
      # Adds Virtual Disks
      unless SubutaiConfig.get(:SUBUTAI_DISK).nil?
        grow_by = SubutaiConfig.get_grow_by
        generated_disk = SubutaiConfig.get(:_SUBUTAI_DISK)
        disk_port = SubutaiConfig.get(:_SUBUTAI_DISK_PORT)
        disk_port = 1 if disk_port.nil?

        file_disk = "./SubutaiDisk-#{disk_port}-#{grow_by}.vdi"

        unless File.exist?(file_disk)
          if grow_by > 0
            STDOUT.puts "Grow by: #{grow_by} gb"
            temp_grow_by = grow_by
            grow_by = grow_by * 1024 + 2 * 1024 # 2 gb for overhead
            vb.customize ['createhd', '--filename', file_disk, '--size', grow_by]

            # SATA port should change every added new virtual disks
            if disk_port.nil?
              vb.customize ['storageattach', :id,  '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', file_disk]
              SubutaiConfig.put(:_SUBUTAI_DISK_PORT, 1, true)
            else
              disk_port = disk_port.to_i + 1 # increase port by one
              vb.customize ['storageattach', :id,  '--storagectl', 'SATA Controller', '--port', disk_port, '--device', 0, '--type', 'hdd', '--medium', file_disk]
              SubutaiConfig.put(:_SUBUTAI_DISK_PORT, disk_port, true)
            end

            if generated_disk.nil?
              SubutaiConfig.put(:_SUBUTAI_DISK, temp_grow_by, true) # we set sum of virtual disks to _SUBUTAI_DISK
            else
              SubutaiConfig.put(:_SUBUTAI_DISK, temp_grow_by + generated_disk.to_i, true) # we set sum of virtual disks to _SUBUTAI_DISK
            end
          else
            STDOUT.puts "WARNING the operation will be ignored because it shrink operations are not supported"
          end
        end
      end
    end
  end

  config.vm.provision 'shell', env: SubutaiConfig.config, inline: <<-SHELL
    echo "SUBUTAI_VAGRANT_VERSION=$VERSION"   >> /etc/environment
    echo "SUBUTAI_BRIDGE_IFACE=enp0s8"        >> /etc/environment
    echo "SUBUTAI_NAT_IFACE=enp0s3"           >> /etc/environment
    echo "SUBUTAI_HOST_IFACE=enp0s9"          >> /etc/environment

    if [ -n "$PASSWORD_OVERRIDE" ]; then
      usermod --password $(echo "$PASSWORD_OVERRIDE" | openssl passwd -1 -stdin) subutai
    fi
  SHELL

  unless SubutaiConfig.get(:AUTHORIZED_KEYS).nil?
    config.vm.provision 'file', source: SubutaiConfig.get(:AUTHORIZED_KEYS), destination: '/tmp/authorized_keys'

    config.vm.provision 'shell', inline: <<-SHELL
      mkdir -p /root/.ssh
      cat /tmp/authorized_keys >> /root/.ssh/authorized_keys
      chmod 600 /root/.ssh/authorized_keys
      chmod 700 /root/.ssh

      mkdir -p /home/subutai/.ssh
      cat /tmp/authorized_keys >> /home/subutai/.ssh/authorized_keys
      chown subutai:subutai /home/subutai/.ssh/authorized_keys
      chmod 600 /home/subutai/.ssh/authorized_keys
      chmod 700 /home/subutai/.ssh
      chown subutai:subutai /home/subutai/.ssh
    SHELL
  end

  if SubutaiConfig.provision_snap?
    config.vm.provision 'file', source: SubutaiConfig.get(:_ALT_SNAP), destination: '$HOME/subutai.snap'
    SubutaiConfig.snap_provisioned!
  end

  if SubutaiConfig.provision_management?
    config.vm.provision 'file', source: SubutaiConfig.get(:_ALT_MANAGEMENT), destination: '$HOME/subutai.management'
    SubutaiConfig.management_provisioned!
  end

  config.vm.provision 'shell', env: SubutaiConfig.config,
                      path: 'https://raw.githubusercontent.com/subutai-io/packer/master/provisioning/en/provisioner.sh'

  unless $GROW_BY.nil?
    if $GROW_BY > 0
      config.vm.provision "shell", run: "always", env: {DISK_SIZE: $GROW_BY.to_i},
                          path: 'https://raw.githubusercontent.com/subutai-io/packer/issue-33/scripts/subutai_disk.sh'
    end
  end
end
